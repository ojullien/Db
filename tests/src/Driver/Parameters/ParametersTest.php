<?php

namespace OphpTest\Db\Driver\Parameters;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-18 at 21:21:13.
 */
class ParametersTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Instance of the options class.
     * @var \Ophp\Db\Driver\Parameters\Parameters
     */
    protected $pObject = null;

    /**
     *
     */
    public function setUp()
    {
        $this->pObject = new \Ophp\Db\Driver\Parameters\Parameters();
    }

    /**
     *
     */
    public function tearDown()
    {
        $this->pObject = null;
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetDBNameInvalidArgumentException()
    {
        $this->pObject->setDBName('');
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     */
    public function testGetDBName()
    {
        $sBuffer = 'theDBName';
        $this->assertSame($sBuffer, $this->pObject->setDBName($sBuffer)->getDBName(), 'Db name should be \'theDBName\'.');
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersHostnameNotProvided()
    {
        $aOptions = [ 'hostnam' => 'h', 'port' => '3306', 'charset' => 'c', 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersPortNotProvided()
    {
        $aOptions = [ 'hostname' => 'h', 'por' => '3306', 'charset' => 'c', 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersCharsetNotProvided()
    {
        $aOptions = [ 'hostname' => 'h', 'port' => '3306', 'charse' => 'c', 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersHostnameNotValid()
    {
        $aOptions = [ 'hostname' => false, 'port' => '3306', 'charset' => 'c', 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersPortNotValid()
    {
        $aOptions = [ 'hostname' => 'h', 'port' => 'zhjk', 'charset' => 'c', 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     * @expectedException \InvalidArgumentException
     */
    public function testSetParametersCharsetNotValid()
    {
        $aOptions = [ 'hostname' => 'h', 'port' => '3306', 'charset' => false, 'driver_options' => [ ] ];
        $this->pObject->setParameters($aOptions);
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     */
    public function testGetParameters()
    {
        $aOptions = [
            'hostname'       => '192.168.33.91',
            'port'           => '3306',
            'charset'        => 'UTF8',
            'driver_options' => [
                \PDO::ATTR_ERRMODE            => \PDO::ERRMODE_EXCEPTION,
                \PDO::ATTR_PERSISTENT         => true,
                \PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES \'UTF8\'' ] ];

        $this->pObject->setParameters($aOptions);

        $this->assertSame($aOptions['hostname'], $this->pObject->getHostName());
        $this->assertSame($aOptions['port'], $this->pObject->getPort());
        $this->assertSame($aOptions['charset'], $this->pObject->getCharset());
        $this->assertSame($aOptions['driver_options'], $this->pObject->getOptions());
    }

    /**
     * @covers \Ophp\Db\Driver\Parameters\Parameters
     * @group specification
     */
    public function testValid()
    {
        $aOptions = [
            'hostname'       => '192.168.33.91',
            'port'           => '3306',
            'charset'        => 'UTF8',
            'driver_options' => [
                \PDO::ATTR_ERRMODE            => \PDO::ERRMODE_EXCEPTION,
                \PDO::ATTR_PERSISTENT         => true,
                \PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES \'UTF8\'' ] ];

        $this->assertFalse($this->pObject->valid());
        $this->assertFalse($this->pObject->setParameters($aOptions)->valid());
        $this->assertTrue($this->pObject->setDBName('theDBName')->valid());
    }
}
